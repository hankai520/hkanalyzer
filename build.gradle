ext {
    mainVersion = "0.0.1.RELEASE"
}

apply plugin: "eclipse"
apply plugin: "eclipse-wtp"
apply plugin: "java"
apply plugin: "maven"

buildscript {
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    }
}

repositories {
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

eclipse {
    project {
        name="hkanalyzer"
    }
    classpath {
         downloadSources=true
    }
}

jar {
    baseName = "hkanalyzer"
    version = mainVersion
    manifest {
        attributes(
            "Implementation-Version": mainVersion
        )
    }
}

sourceSets {
    main.java.srcDirs = ["src/main/java"]
    main.resources.srcDirs = ["src/main/resources"]
    test.java.srcDirs = ["src/test/java"]
    test.resources.srcDirs = ["src/test/resources"]
}

dependencies {
    compile "org.slf4j:slf4j-api:1.7.12"
    compile "org.slf4j:jcl-over-slf4j:1.7.12"
    compile "org.slf4j:log4j-over-slf4j:1.7.12"
    compile "ch.qos.logback:logback-classic:1.1.7"
    compile "org.apache.commons:commons-lang3:3.4"
    compile "org.apache.lucene:lucene-core:6.3.0"
    compile "org.apache.lucene:lucene-queryparser:6.3.0"

    testCompile "junit:junit:4.12"
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-parameters"
    options.encoding = "UTF-8"
}


configure(install.repositories.mavenInstaller) {
    pom.project {
        groupId 'ren.hankai'
        artifactId 'hkanalyzer'
        version = mainVersion
        inceptionYear '2019'
        packaging 'jar'
        licenses {
            license {
                name 'IKA refinement'
                //url ''
                distribution 'repo'
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn:classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}