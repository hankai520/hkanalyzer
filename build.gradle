buildscript {
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    }
    dependencies {
    	classpath "com.bmuschko:gradle-nexus-plugin:2.3.1"
    }
}

plugins {
	id "io.codearte.nexus-staging" version "0.11.0"
}

nexusStaging {
    packageGroup = "ren.hankai"
}

ext {
    mainVersion = "0.0.1.RELEASE"
    
    linkHomepage = "https://github.com/hankai520/hkanalyzer"
    linkScmUrl = "https://github.com/hankai520/hkanalyzer"
	linkScmConnection = "https://github.com/hankai520/hkanalyzer.git"
	linkScmDevConnection = "https://github.com/hankai520/hkanalyzer.git"
	
	developerId = "hankai945"
	developerName = "Kai Han"
	developerEmail = "john.han.kai@gmail.com"
	
	licenseName = "The MIT License (MIT)"
	licenseUrl = "https://github.com/hankai520/hkanalyzer/blob/master/LICENSE"
	licenseDistribution = "repo"
	
	sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
	sonatypeSnapshotRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
}

apply plugin: "eclipse"
apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "eclipse-wtp"

repositories {
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

eclipse {
    project {
        name="hkanalyzer"
    }
    classpath {
         downloadSources=true
    }
}

jar {
    baseName = "hkanalyzer"
    version = mainVersion
    manifest {
        attributes(
            "Implementation-Version": mainVersion
        )
    }
}

sourceSets {
    main.java.srcDirs = ["src/main/java"]
    main.resources.srcDirs = ["src/main/resources"]
    test.java.srcDirs = ["src/test/java"]
    test.resources.srcDirs = ["src/test/resources"]
}

dependencies {
    compile "org.slf4j:slf4j-api:1.7.12"
    compile "org.slf4j:jcl-over-slf4j:1.7.12"
    compile "org.slf4j:log4j-over-slf4j:1.7.12"
    compile "ch.qos.logback:logback-classic:1.1.7"
    compile "org.apache.commons:commons-lang3:3.4"
    compile "org.apache.lucene:lucene-core:6.3.0"
    compile "org.apache.lucene:lucene-queryparser:6.3.0"

    testCompile "junit:junit:4.12"
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-parameters"
    options.encoding = "UTF-8"
}

javadoc {
	options.addStringOption('encoding', 'UTF-8')
}

/* 上传到 sonatype nexus */
apply plugin: "com.bmuschko.nexus"

group = "ren.hankai"
archivesBaseName = jar.baseName
version = mainVersion

modifyPom {
    project {
        name "HkAnalyzer"
        description "HkAnalyzer"
        url = linkHomepage
        scm {
            url = linkScmUrl
            connection = linkScmConnection
            developerConnection = linkScmDevConnection
        }
        licenses {
            license {
                name = licenseName
                url = licenseUrl
                distribution = licenseDistribution
            }
        }
        developers {
            developer {
                id = developerId
                name = developerName
                email = developerEmail
            }
        }
    }
}

extraArchive {
    sources = true
    tests = true
    javadoc = true
}
/*
~/.gradle/gradle.properties 中配置私密信息如下：
nexusUsername=sonatype用户名
nexusPassword=sonatype密码

signing.keyId=gpg签名所用密钥ID（gpg -K，取"sec"信息中的ID后8位）
signing.secretKeyRingFile=包含私钥的密钥串文件（gpg 2.1后，需要执行命令导出 gpg --keyring secring.gpg --export-secret-keys > ~/.gnupg/secring.gpg）
signing.password=密钥密码（生成密钥时所指定的密码）

macos密钥管理可以使用 GPG Keychain 应用

*/
nexus {
    sign = true
    repositoryUrl = sonatypeRepositoryUrl
    snapshotRepositoryUrl = sonatypeSnapshotRepositoryUrl
}